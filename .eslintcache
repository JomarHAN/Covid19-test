[{"/Users/jomarnguyen/Desktop/covid19-test/src/index.js":"1","/Users/jomarnguyen/Desktop/covid19-test/src/App.js":"2","/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js":"3","/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js":"4","/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx":"5","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js":"6","/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx":"7","/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx":"8","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js":"9","/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx":"10","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx":"11","/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx":"12","/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx":"13","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx":"14","/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js":"15","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js":"16","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js":"17","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js":"18","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx":"19","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx":"20","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx":"21","/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js":"22","/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx":"23","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js":"24","/Users/jomarnguyen/Desktop/covid19-test/src/SwitchUsBtn.jsx":"25","/Users/jomarnguyen/Desktop/covid19-test/src/Icon.js":"26"},{"size":644,"mtime":1609108099179,"results":"27","hashOfConfig":"28"},{"size":267,"mtime":1609626662325,"results":"29","hashOfConfig":"28"},{"size":5141,"mtime":1609108099181,"results":"30","hashOfConfig":"28"},{"size":359,"mtime":1609727241334,"results":"31","hashOfConfig":"28"},{"size":1885,"mtime":1610000564570,"results":"32","hashOfConfig":"28"},{"size":1214,"mtime":1610001129688,"results":"33","hashOfConfig":"28"},{"size":1084,"mtime":1610000488714,"results":"34","hashOfConfig":"28"},{"size":2909,"mtime":1610048504050,"results":"35","hashOfConfig":"28"},{"size":2818,"mtime":1610000488722,"results":"36","hashOfConfig":"28"},{"size":1073,"mtime":1609890244121,"results":"37","hashOfConfig":"28"},{"size":617,"mtime":1610000488712,"results":"38","hashOfConfig":"28"},{"size":1350,"mtime":1610046388684,"results":"39","hashOfConfig":"28"},{"size":2451,"mtime":1610001809641,"results":"40","hashOfConfig":"28"},{"size":2580,"mtime":1610031423190,"results":"41","hashOfConfig":"28"},{"size":451,"mtime":1610000488719,"results":"42","hashOfConfig":"28"},{"size":1284,"mtime":1610034145355,"results":"43","hashOfConfig":"28"},{"size":6405,"mtime":1610000488721,"results":"44","hashOfConfig":"28"},{"size":318,"mtime":1609447541043,"results":"45","hashOfConfig":"28"},{"size":2834,"mtime":1610045827858,"results":"46","hashOfConfig":"28"},{"size":2720,"mtime":1610032928672,"results":"47","hashOfConfig":"28"},{"size":2723,"mtime":1610032935612,"results":"48","hashOfConfig":"28"},{"size":719,"mtime":1609976659877,"results":"49","hashOfConfig":"28"},{"size":2464,"mtime":1610000488718,"results":"50","hashOfConfig":"28"},{"size":2348,"mtime":1610000625373,"results":"51","hashOfConfig":"28"},{"size":1363,"mtime":1610037358283,"results":"52","hashOfConfig":"28"},{"size":360,"mtime":1610045904831,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1lxvjqz",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jomarnguyen/Desktop/covid19-test/src/index.js",[],["110","111"],"/Users/jomarnguyen/Desktop/covid19-test/src/App.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx",["112"],"import React, { useEffect, useState } from \"react\";\nimport MapContent from \"./MapContent\";\nimport {\n  selectCountryLatLng,\n  selectCountryZoom,\n} from \"./features/countrySlice\";\nimport { useSelector } from \"react-redux\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport Legend from \"./Legend\";\nimport MapHeader from \"./MapHeader\";\nimport { selectCasesType } from \"./features/casesTypeSlice\";\nimport { selectIsUsa, selectUsLatLng, selectUsZoom } from \"./features/usaSlice\";\nimport UsaMapContent from \"./UsaMapContent\";\nimport LoadUsaTasks from \"./tasks/LoadUsaTasks\";\n\nfunction CovidMap() {\n  const countryLatLng = useSelector(selectCountryLatLng);\n  const zoom = useSelector(selectCountryZoom);\n  const [countries, setCountries] = useState([]);\n  const casesType = useSelector(selectCasesType);\n  const isUsa = useSelector(selectIsUsa);\n  const [usStates, setUsStates] = useState([]);\n  const usZoom = useSelector(selectUsZoom);\n  const usLatLng = useSelector(selectUsLatLng);\n\n  const load = () => {\n    const loadCountries = new LoadCountriesTasks();\n    loadCountries.load(setCountries, casesType);\n  };\n\n  const loadUsa = () => {\n    const loadStates = new LoadUsaTasks();\n    loadStates.load(setUsStates);\n  };\n\n  useEffect(() => {\n    if (!isUsa) {\n      load();\n    } else {\n      loadUsa();\n    }\n  }, [casesType, isUsa]);\n\n  // console.log(countries);\n\n  return (\n    countries.length > 0 && (\n      <div className=\"app__container\" style={{ height: \"100vh\" }}>\n        <MapHeader />\n        {!isUsa ? (\n          <MapContent\n            center={countryLatLng}\n            zoom={zoom}\n            countries={countries}\n          />\n        ) : (\n          <UsaMapContent\n            usStates={usStates}\n            usZoom={usZoom}\n            usLatLng={usLatLng}\n          />\n        )}\n        <Legend />\n      </div>\n    )\n  );\n}\n\nexport default CovidMap;\n","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx",["113"],"import React, { useEffect, useState } from \"react\";\nimport \"./TableInfo.css\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport TableList from \"./TableList\";\nimport AppCharts from \"./AppCharts\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsUsa } from \"./features/usaSlice\";\nimport LoadUsaStasks from \"./tasks/LoadUsaTasks\";\n\nfunction TableInfo() {\n  const [listRegion, setListRegion] = useState([]);\n  const loadWorldData = new LoadCountriesTasks();\n  const isUsa = useSelector(selectIsUsa);\n  const loadUsaTasks = new LoadUsaStasks();\n\n  const load = () => {\n    if (!isUsa) {\n      loadWorldData.loadListRegion(setListRegion);\n    } else {\n      loadUsaTasks.loadListTable(setListRegion);\n    }\n  };\n\n  useEffect(load, [isUsa]);\n\n  return (\n    <div className=\"app__table\">\n      <div className=\"app__listRegion\">\n        <h1>List of Regions</h1>\n        {listRegion && <TableList listRegion={listRegion} />}\n      </div>\n      <div className=\"app__charts\">\n        <AppCharts />\n      </div>\n    </div>\n  );\n}\n\nexport default TableInfo;\n","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx",["114"],"import React, { useEffect, useState } from \"react\";\nimport CardType from \"./CardType\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport numeral from \"numeral\";\nimport \"./MapHeader.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCountryCovid } from \"./features/countrySlice\";\nimport { selectCasesType, setCasesType } from \"./features/casesTypeSlice\";\nimport SwitchUsBtn from \"./SwitchUsBtn\";\nimport { selectIsUsa } from \"./features/usaSlice\";\nimport LoadUsaTasks from \"./tasks/LoadUsaTasks\";\n\nfunction MapHeader() {\n  const [update, setUpdate] = useState();\n  const casesTypeDispatch = useDispatch();\n  const casesType = useSelector(selectCasesType);\n  const countryCovid = useSelector(selectCountryCovid);\n  const isUsa = useSelector(selectIsUsa);\n\n  const loadWorldData = new LoadCountriesTasks();\n  const loadUsTasks = new LoadUsaTasks();\n\n  const loadUsCard = () => {\n    loadUsTasks.loadUsCard(setUpdate);\n  };\n\n  const load = () => {\n    if (countryCovid === \"Worldwide\") {\n      loadWorldData.loadWorldData(setUpdate);\n    } else {\n      loadWorldData.loadCountrydData(countryCovid, setUpdate);\n    }\n  };\n\n  useEffect(() => {\n    if (!isUsa) {\n      load();\n    } else {\n      loadUsCard();\n    }\n  }, [countryCovid, isUsa]);\n\n  return (\n    <div className=\"mapheader\" style={{ height: \"25vh\" }}>\n      <div className=\"mapheader__titleAndSwitch\">\n        <h1>COVID-19 TRACKER</h1>\n        <SwitchUsBtn />\n      </div>\n      <div className=\"mapheader__cardsGroup\">\n        <CardType\n          active={casesType === \"cases\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"cases\"))}\n          title=\"Cases\"\n          cases={numeral(update?.todayCases).format(\"0.0a\")}\n          casesTotal={numeral(update?.cases).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"recovered\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"recovered\"))}\n          title=\"Recovered\"\n          cases={numeral(update?.todayRecovered).format(\"0.0a\")}\n          casesTotal={numeral(update?.recovered).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"deaths\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"deaths\"))}\n          title=\"Deaths\"\n          cases={numeral(update?.todayDeaths).format(\"0.0a\")}\n          casesTotal={numeral(update?.deaths).format(\"0.0a\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MapHeader;\n","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx",["115"],"/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/SwitchUsBtn.jsx",["116"],"/Users/jomarnguyen/Desktop/covid19-test/src/Icon.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":42,"column":6,"nodeType":"123","endLine":42,"endColumn":24,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":24,"column":19,"nodeType":"123","endLine":24,"endColumn":26,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":41,"column":6,"nodeType":"123","endLine":41,"endColumn":27,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":68,"column":53,"nodeType":"130","endLine":68,"endColumn":58},{"ruleId":"121","severity":1,"message":"131","line":40,"column":6,"nodeType":"123","endLine":40,"endColumn":18,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has missing dependencies: 'loadUsaTasks' and 'loadWorldData'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'load' and 'loadUsCard'. Either include them or remove the dependency array.",["137"],"Assignments to the 'countryCovid' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'usaDispatch'. Either include it or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [casesType, isUsa, load]",{"range":"147","text":"148"},"Update the dependencies array to be: [isUsa, loadUsaTasks, loadWorldData]",{"range":"149","text":"150"},"Update the dependencies array to be: [countryCovid, isUsa, load, loadUsCard]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkState, usaDispatch]",{"range":"153","text":"154"},[1329,1347],"[casesType, isUsa, load]",[754,761],"[isUsa, loadUsaTasks, loadWorldData]",[1257,1278],"[countryCovid, isUsa, load, loadUsCard]",[873,885],"[checkState, usaDispatch]"]