[{"/Users/jomarnguyen/Desktop/covid19-test/src/index.js":"1","/Users/jomarnguyen/Desktop/covid19-test/src/App.js":"2","/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js":"3","/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js":"4","/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx":"5","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js":"6","/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx":"7","/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx":"8","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js":"9","/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx":"10","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx":"11","/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx":"12","/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx":"13","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx":"14","/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js":"15","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js":"16","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js":"17","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js":"18","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx":"19","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx":"20","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx":"21","/Users/jomarnguyen/Desktop/covid19-test/src/ScopeBox.jsx":"22","/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js":"23","/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx":"24","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js":"25"},{"size":644,"mtime":1609108099179,"results":"26","hashOfConfig":"27"},{"size":267,"mtime":1609626662325,"results":"28","hashOfConfig":"27"},{"size":5141,"mtime":1609108099181,"results":"29","hashOfConfig":"27"},{"size":359,"mtime":1609727241334,"results":"30","hashOfConfig":"27"},{"size":1903,"mtime":1609860501612,"results":"31","hashOfConfig":"27"},{"size":1214,"mtime":1609628816044,"results":"32","hashOfConfig":"27"},{"size":1084,"mtime":1609864731721,"results":"33","hashOfConfig":"27"},{"size":2354,"mtime":1609731981665,"results":"34","hashOfConfig":"27"},{"size":2818,"mtime":1609864677992,"results":"35","hashOfConfig":"27"},{"size":1101,"mtime":1609885470684,"results":"36","hashOfConfig":"27"},{"size":617,"mtime":1609623397430,"results":"37","hashOfConfig":"27"},{"size":1308,"mtime":1609885791301,"results":"38","hashOfConfig":"27"},{"size":2098,"mtime":1609731854331,"results":"39","hashOfConfig":"27"},{"size":2108,"mtime":1609864651203,"results":"40","hashOfConfig":"27"},{"size":451,"mtime":1609537817669,"results":"41","hashOfConfig":"27"},{"size":1204,"mtime":1609436104465,"results":"42","hashOfConfig":"27"},{"size":6377,"mtime":1609864576993,"results":"43","hashOfConfig":"27"},{"size":318,"mtime":1609447541043,"results":"44","hashOfConfig":"27"},{"size":2513,"mtime":1609884312627,"results":"45","hashOfConfig":"27"},{"size":2188,"mtime":1609630452241,"results":"46","hashOfConfig":"27"},{"size":2197,"mtime":1609630514760,"results":"47","hashOfConfig":"27"},{"size":1543,"mtime":1609737848956,"results":"48","hashOfConfig":"27"},{"size":718,"mtime":1609737869863,"results":"49","hashOfConfig":"27"},{"size":927,"mtime":1609885458788,"results":"50","hashOfConfig":"27"},{"size":1455,"mtime":1609885589980,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1lxvjqz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jomarnguyen/Desktop/covid19-test/src/index.js",[],["106","107"],"/Users/jomarnguyen/Desktop/covid19-test/src/App.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx",["108","109","110","111","112","113"],"import React, { useEffect, useState } from \"react\";\nimport MapContent from \"./MapContent\";\nimport {\n  selectCountryLatLng,\n  selectCountryZoom,\n} from \"./features/countrySlice\";\nimport { useSelector } from \"react-redux\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport Legend from \"./Legend\";\nimport MapHeader from \"./MapHeader\";\nimport { selectCasesType } from \"./features/casesTypeSlice\";\nimport { selectIsUsa, selectUsLatLng, selectUsZoom } from \"./features/usaSlice\";\nimport UsaMapContent from \"./UsaMapContent\";\nimport LoadUsaTasks from \"./tasks/LoadUsaTasks\";\n\nfunction CovidMap() {\n  const countryLatLng = useSelector(selectCountryLatLng);\n  const zoom = useSelector(selectCountryZoom);\n  const [countries, setCountries] = useState([]);\n  const casesType = useSelector(selectCasesType);\n  const isUsa = useSelector(selectIsUsa);\n  const [usStates, setUsStates] = useState([]);\n  const usZoom = useSelector(selectUsZoom);\n  const usLatLng = useSelector(selectUsLatLng);\n\n  const load = () => {\n    const loadCountries = new LoadCountriesTasks();\n    loadCountries.load(setCountries, casesType);\n  };\n\n  const loadUsa = () => {\n    const loadStates = new LoadUsaTasks();\n    loadStates.load(setCountries);\n  };\n\n  useEffect(() => {\n    // if (!isUsa) {\n    //   load();\n    // } else {\n    loadUsa();\n    // }\n  }, [casesType, isUsa]);\n\n  // console.log(countries);\n\n  return (\n    countries.length > 0 && (\n      <div className=\"app__container\" style={{ height: \"100vh\" }}>\n        <MapHeader />\n        {/* {!isUsa ? (\n          <MapContent\n            center={countryLatLng}\n            zoom={zoom}\n            countries={countries}\n          />\n        ) : ( */}\n        <UsaMapContent\n          usStates={countries}\n          usZoom={usZoom}\n          usLatLng={usLatLng}\n        />\n        {/* )} */}\n        <Legend />\n      </div>\n    )\n  );\n}\n\nexport default CovidMap;\n","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx",["114"],"/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx",["115"],"import React, { useEffect, useState } from \"react\";\nimport CardType from \"./CardType\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport numeral from \"numeral\";\nimport \"./MapHeader.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCountryCovid } from \"./features/countrySlice\";\nimport { selectCasesType, setCasesType } from \"./features/casesTypeSlice\";\nimport ScopeBox from \"./ScopeBox\";\n\nfunction MapHeader() {\n  const [update, setUpdate] = useState();\n  const loadWorldData = new LoadCountriesTasks();\n  const casesTypeDispatch = useDispatch();\n  const casesType = useSelector(selectCasesType);\n  const countryCovid = useSelector(selectCountryCovid);\n\n  const load = () => {\n    if (countryCovid === \"worldwide\") {\n      loadWorldData.loadWorldData(setUpdate);\n    } else {\n      loadWorldData.loadCountrydData(countryCovid, setUpdate);\n    }\n  };\n\n  useEffect(load, [countryCovid]);\n\n  return (\n    <div className=\"mapheader\" style={{ height: \"25vh\" }}>\n      <div className=\"mapheader__titleAndSwitch\">\n        <h1>COVID-19 TRACKER</h1>\n        <ScopeBox />\n      </div>\n      <div className=\"mapheader__cardsGroup\">\n        <CardType\n          active={casesType === \"cases\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"cases\"))}\n          title=\"Cases\"\n          cases={numeral(update?.todayCases).format(\"0.0a\")}\n          casesTotal={numeral(update?.cases).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"recovered\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"recovered\"))}\n          title=\"Recovered\"\n          cases={numeral(update?.todayRecovered).format(\"0.0a\")}\n          casesTotal={numeral(update?.recovered).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"deaths\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"deaths\"))}\n          title=\"Deaths\"\n          cases={numeral(update?.todayDeaths).format(\"0.0a\")}\n          casesTotal={numeral(update?.deaths).format(\"0.0a\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MapHeader;\n","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/ScopeBox.jsx",["116"],"import {\n  FormControlLabel,\n  FormGroup,\n  Switch,\n  withStyles,\n} from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setCountryLatLng } from \"./features/countrySlice\";\nimport { setIsUsa } from \"./features/usaSlice\";\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: blue[300],\n    \"&$checked\": {\n      color: blue[500],\n    },\n    \"&$checked + $track\": {\n      backgroundColor: blue[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ScopeBox() {\n  const [checkState, setCheckState] = useState(true);\n  const countryDispatch = useDispatch();\n  const usaDispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setCheckState(e.target.checked);\n  };\n\n  useEffect(() => {\n    if (checkState) {\n      usaDispatch(setIsUsa({ isUsa: true }));\n    } else {\n      usaDispatch(setIsUsa({ isUsa: false }));\n      countryDispatch(setCountryLatLng({ countryLatLng: [50, 0], zoom: 1.7 }));\n    }\n  }, [checkState]);\n\n  return (\n    <div\n      style={{\n        right: \"10px\",\n        top: \"10px\",\n        border: \"1px solid lightgray\",\n        padding: \"5px\",\n        backgroundColor: \"lightgray\",\n        borderRadius: \"5px\",\n      }}\n    >\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <PurpleSwitch checked={checkState} onChange={handleChange} />\n          }\n          label=\"US Only\"\n        />\n      </FormGroup>\n    </div>\n  );\n}\n\nexport default ScopeBox;\n","/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":17,"column":9,"nodeType":"123","messageId":"124","endLine":17,"endColumn":22},{"ruleId":"121","severity":1,"message":"126","line":18,"column":9,"nodeType":"123","messageId":"124","endLine":18,"endColumn":13},{"ruleId":"121","severity":1,"message":"127","line":22,"column":10,"nodeType":"123","messageId":"124","endLine":22,"endColumn":18},{"ruleId":"121","severity":1,"message":"128","line":22,"column":20,"nodeType":"123","messageId":"124","endLine":22,"endColumn":31},{"ruleId":"121","severity":1,"message":"129","line":26,"column":9,"nodeType":"123","messageId":"124","endLine":26,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":24,"column":19,"nodeType":"132","endLine":24,"endColumn":26,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":26,"column":19,"nodeType":"132","endLine":26,"endColumn":33,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":43,"column":6,"nodeType":"132","endLine":43,"endColumn":18,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'MapContent' is defined but never used.","Identifier","unusedVar","'countryLatLng' is assigned a value but never used.","'zoom' is assigned a value but never used.","'usStates' is assigned a value but never used.","'setUsStates' is assigned a value but never used.","'load' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadUsaTasks' and 'loadWorldData'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'loadWorldData'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'countryDispatch' and 'usaDispatch'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [isUsa, loadUsaTasks, loadWorldData]",{"range":"149","text":"150"},"Update the dependencies array to be: [countryCovid, loadWorldData]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkState, countryDispatch, usaDispatch]",{"range":"153","text":"154"},[754,761],"[isUsa, loadUsaTasks, loadWorldData]",[914,928],"[countryCovid, loadWorldData]",[1053,1065],"[checkState, countryDispatch, usaDispatch]"]