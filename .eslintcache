[{"/Users/jomarnguyen/Desktop/covid19-test/src/index.js":"1","/Users/jomarnguyen/Desktop/covid19-test/src/App.js":"2","/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js":"3","/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js":"4","/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx":"5","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js":"6","/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx":"7","/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx":"8","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js":"9","/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx":"10","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx":"11","/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx":"12","/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx":"13","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx":"14","/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js":"15","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js":"16","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js":"17","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js":"18","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx":"19","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx":"20","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx":"21","/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js":"22","/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx":"23","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js":"24","/Users/jomarnguyen/Desktop/covid19-test/src/SwitchUsBtn.jsx":"25","/Users/jomarnguyen/Desktop/covid19-test/src/Icon.js":"26","/Users/jomarnguyen/Desktop/covid19-test/src/Loading.jsx":"27"},{"size":646,"mtime":1610135892379,"results":"28","hashOfConfig":"29"},{"size":267,"mtime":1610135963238,"results":"30","hashOfConfig":"29"},{"size":5141,"mtime":1609108099181,"results":"31","hashOfConfig":"29"},{"size":359,"mtime":1609727241334,"results":"32","hashOfConfig":"29"},{"size":1857,"mtime":1610136009542,"results":"33","hashOfConfig":"29"},{"size":1214,"mtime":1610001129688,"results":"34","hashOfConfig":"29"},{"size":913,"mtime":1610051578537,"results":"35","hashOfConfig":"29"},{"size":2830,"mtime":1610050912964,"results":"36","hashOfConfig":"29"},{"size":2818,"mtime":1610000488722,"results":"37","hashOfConfig":"29"},{"size":1913,"mtime":1610056433357,"results":"38","hashOfConfig":"29"},{"size":617,"mtime":1610000488712,"results":"39","hashOfConfig":"29"},{"size":1346,"mtime":1610121355008,"results":"40","hashOfConfig":"29"},{"size":2424,"mtime":1610050519646,"results":"41","hashOfConfig":"29"},{"size":2580,"mtime":1610031423190,"results":"42","hashOfConfig":"29"},{"size":451,"mtime":1610000488719,"results":"43","hashOfConfig":"29"},{"size":1284,"mtime":1610034145355,"results":"44","hashOfConfig":"29"},{"size":6405,"mtime":1610000488721,"results":"45","hashOfConfig":"29"},{"size":318,"mtime":1609447541043,"results":"46","hashOfConfig":"29"},{"size":2835,"mtime":1610121858020,"results":"47","hashOfConfig":"29"},{"size":2721,"mtime":1610121887594,"results":"48","hashOfConfig":"29"},{"size":2724,"mtime":1610121900865,"results":"49","hashOfConfig":"29"},{"size":719,"mtime":1609976659877,"results":"50","hashOfConfig":"29"},{"size":2436,"mtime":1610058430778,"results":"51","hashOfConfig":"29"},{"size":2348,"mtime":1610000625373,"results":"52","hashOfConfig":"29"},{"size":1212,"mtime":1610049442269,"results":"53","hashOfConfig":"29"},{"size":360,"mtime":1610045904831,"results":"54","hashOfConfig":"29"},{"size":639,"mtime":1610135393606,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lxvjqz",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jomarnguyen/Desktop/covid19-test/src/index.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/App.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js",[],["115","116"],"/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx",["117"],"/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx",["118"],"import React, { useEffect, useState } from \"react\";\nimport \"./TableInfo.css\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport TableList from \"./TableList\";\nimport AppCharts from \"./AppCharts\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsUsa } from \"./features/usaSlice\";\nimport LoadUsaStasks from \"./tasks/LoadUsaTasks\";\nimport { ArrowForwardIos } from \"@material-ui/icons\";\nimport { IconButton } from \"@material-ui/core\";\n\nfunction TableInfo() {\n  const [listRegion, setListRegion] = useState([]);\n  const loadWorldData = new LoadCountriesTasks();\n  const isUsa = useSelector(selectIsUsa);\n  const loadUsaTasks = new LoadUsaStasks();\n  const [click, setClick] = useState(false);\n\n  const load = () => {\n    if (!isUsa) {\n      loadWorldData.loadListRegion(setListRegion);\n    } else {\n      loadUsaTasks.loadListTable(setListRegion);\n    }\n  };\n\n  useEffect(load, [isUsa]);\n\n  const clickResponsive = () => {\n    const tableResponsive = document.querySelector(\".app__table\");\n    const btnResponsive = document.querySelector(\".app__btnOn\");\n    if (!click) {\n      tableResponsive.classList.remove(\"app__tableResponsive\");\n      btnResponsive.classList.remove(\"app__btnOff\");\n      setClick(true);\n    } else {\n      tableResponsive.classList.add(\"app__tableResponsive\");\n      btnResponsive.classList.add(\"app__btnOff\");\n      setClick(false);\n    }\n  };\n\n  return (\n    <div className=\"app__table app__tableResponsive\">\n      <div className=\"app__responsiveBtn\">\n        <IconButton onClick={clickResponsive}>\n          <ArrowForwardIos className=\"app__btnOn app__btnOff\" />\n        </IconButton>\n      </div>\n      <div className=\"app__listRegion\">\n        <h1>List of Regions</h1>\n        {listRegion && <TableList listRegion={listRegion} />}\n      </div>\n      <div className=\"app__charts\">\n        <AppCharts />\n      </div>\n    </div>\n  );\n}\n\nexport default TableInfo;\n","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx",["119"],"import React, { useEffect, useState } from \"react\";\nimport CardType from \"./CardType\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport numeral from \"numeral\";\nimport \"./MapHeader.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCountryCovid } from \"./features/countrySlice\";\nimport { selectCasesType, setCasesType } from \"./features/casesTypeSlice\";\nimport SwitchUsBtn from \"./SwitchUsBtn\";\nimport { selectIsUsa } from \"./features/usaSlice\";\nimport LoadUsaTasks from \"./tasks/LoadUsaTasks\";\n\nfunction MapHeader() {\n  const [update, setUpdate] = useState();\n  const casesTypeDispatch = useDispatch();\n  const casesType = useSelector(selectCasesType);\n  const countryCovid = useSelector(selectCountryCovid);\n  const isUsa = useSelector(selectIsUsa);\n\n  const loadWorldData = new LoadCountriesTasks();\n  const loadUsTasks = new LoadUsaTasks();\n\n  const loadUsCard = () => {\n    loadUsTasks.loadUsCard(setUpdate);\n  };\n\n  const load = () => {\n    if (countryCovid === \"Worldwide\") {\n      loadWorldData.loadWorldData(setUpdate);\n    } else {\n      loadWorldData.loadCountrydData(countryCovid, setUpdate);\n    }\n  };\n\n  useEffect(() => {\n    if (!isUsa) {\n      load();\n    } else {\n      loadUsCard();\n    }\n  }, [countryCovid, isUsa]);\n\n  return (\n    <div className=\"mapheader\">\n      <div className=\"mapheader__titleAndSwitch\">\n        <h1>COVID-19 TRACKER</h1>\n        <SwitchUsBtn />\n      </div>\n      <div className=\"mapheader__cardsGroup\">\n        <CardType\n          active={casesType === \"cases\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"cases\"))}\n          title=\"Cases\"\n          cases={numeral(update?.todayCases).format(\"0.0a\")}\n          casesTotal={numeral(update?.cases).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"recovered\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"recovered\"))}\n          title=\"Recovered\"\n          cases={numeral(update?.todayRecovered).format(\"0.0a\")}\n          casesTotal={numeral(update?.recovered).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"deaths\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"deaths\"))}\n          title=\"Deaths\"\n          cases={numeral(update?.todayDeaths).format(\"0.0a\")}\n          casesTotal={numeral(update?.deaths).format(\"0.0a\")}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MapHeader;\n","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx",["120"],"import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport \"./AppCharts.css\";\nimport { selectCasesType } from \"./features/casesTypeSlice\";\nimport { selectCountryCovid } from \"./features/countrySlice\";\nimport ChartDataTasks from \"./tasks/ChartDataTasks\";\nimport numeral from \"numeral\";\nimport { legendItems } from \"./legendsData/LegendItems\";\nimport { selectIsUsa } from \"./features/usaSlice\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0.0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction AppCharts() {\n  const casesType = useSelector(selectCasesType);\n  let countryCovid = useSelector(selectCountryCovid);\n  const [dataChart, setDataChart] = useState();\n  const [colorChart, setColorChart] = useState();\n  const isUsa = useSelector(selectIsUsa);\n\n  const loadChartData = () => {\n    const chartData = new ChartDataTasks();\n    if (!isUsa) {\n      chartData.loadData(casesType, countryCovid, setDataChart);\n    } else {\n      chartData.loadData(casesType, (countryCovid = \"USA\"), setDataChart);\n    }\n    const color = legendItems.find((color) => color.type === casesType);\n    setColorChart(color);\n  };\n\n  useEffect(loadChartData, [casesType, countryCovid, isUsa]);\n\n  return (\n    <div className=\"appChart\">\n      <div className=\"appChart__header\">\n        <h2>\n          {!isUsa ? countryCovid : \"USA\"}:{\" \"}\n          <small>{casesType.toUpperCase()}</small>\n        </h2>\n      </div>\n      <div className=\"appChart__chart\">\n        {dataChart?.length > 0 && (\n          <Line\n            data={{\n              datasets: [\n                {\n                  fill: false,\n                  borderColor: `${colorChart.legends[1].color}`,\n                  data: dataChart,\n                },\n              ],\n            }}\n            options={options}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AppCharts;\n","/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapDeaths.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMapRecovered.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/features/usaSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/UsaMapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadUsaTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/SwitchUsBtn.jsx",["121"],"import {\n  FormControlLabel,\n  FormGroup,\n  Switch,\n  withStyles,\n} from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setIsUsa } from \"./features/usaSlice\";\nimport \"./SwitchUsBtn.css\";\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: blue[300],\n    \"&$checked\": {\n      color: blue[500],\n    },\n    \"&$checked + $track\": {\n      backgroundColor: blue[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ScopeBox() {\n  const [checkState, setCheckState] = useState(false);\n  const usaDispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setCheckState(e.target.checked);\n  };\n\n  useEffect(() => {\n    if (checkState) {\n      usaDispatch(setIsUsa({ isUsa: true }));\n    } else {\n      usaDispatch(setIsUsa({ isUsa: false }));\n    }\n  }, [checkState]);\n\n  return (\n    <div className=\"switchUsBtn\">\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <PurpleSwitch checked={checkState} onChange={handleChange} />\n          }\n          label=\"US Only\"\n        />\n      </FormGroup>\n    </div>\n  );\n}\n\nexport default ScopeBox;\n","/Users/jomarnguyen/Desktop/covid19-test/src/Icon.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/Loading.jsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":42,"column":6,"nodeType":"128","endLine":42,"endColumn":24,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":27,"column":19,"nodeType":"128","endLine":27,"endColumn":26,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":41,"column":6,"nodeType":"128","endLine":41,"endColumn":27,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":68,"column":53,"nodeType":"135","endLine":68,"endColumn":58},{"ruleId":"126","severity":1,"message":"136","line":41,"column":6,"nodeType":"128","endLine":41,"endColumn":18,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'load'. Either include it or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has missing dependencies: 'loadUsaTasks' and 'loadWorldData'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'load' and 'loadUsCard'. Either include them or remove the dependency array.",["142"],"Assignments to the 'countryCovid' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'usaDispatch'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [casesType, isUsa, load]",{"range":"152","text":"153"},"Update the dependencies array to be: [isUsa, loadUsaTasks, loadWorldData]",{"range":"154","text":"155"},"Update the dependencies array to be: [countryCovid, isUsa, load, loadUsCard]",{"range":"156","text":"157"},"Update the dependencies array to be: [checkState, usaDispatch]",{"range":"158","text":"159"},[1329,1347],"[casesType, isUsa, load]",[901,908],"[isUsa, loadUsaTasks, loadWorldData]",[1257,1278],"[countryCovid, isUsa, load, loadUsCard]",[901,913],"[checkState, usaDispatch]"]