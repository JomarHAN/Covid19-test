[{"/Users/jomarnguyen/Desktop/covid19-test/src/index.js":"1","/Users/jomarnguyen/Desktop/covid19-test/src/App.js":"2","/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js":"3","/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js":"4","/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx":"5","/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js":"6","/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx":"7","/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx":"8","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js":"9","/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx":"10","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx":"11","/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx":"12","/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx":"13","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx":"14","/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js":"15","/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js":"16","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js":"17","/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js":"18","/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx":"19"},{"size":644,"mtime":1609108099179,"results":"20","hashOfConfig":"21"},{"size":346,"mtime":1609355804655,"results":"22","hashOfConfig":"21"},{"size":5141,"mtime":1609108099181,"results":"23","hashOfConfig":"21"},{"size":290,"mtime":1609363516510,"results":"24","hashOfConfig":"21"},{"size":1114,"mtime":1609542033601,"results":"25","hashOfConfig":"21"},{"size":989,"mtime":1609536213216,"results":"26","hashOfConfig":"21"},{"size":1080,"mtime":1609449600035,"results":"27","hashOfConfig":"21"},{"size":933,"mtime":1609541891795,"results":"28","hashOfConfig":"21"},{"size":2628,"mtime":1609541943748,"results":"29","hashOfConfig":"21"},{"size":746,"mtime":1609358421094,"results":"30","hashOfConfig":"21"},{"size":611,"mtime":1609363099631,"results":"31","hashOfConfig":"21"},{"size":575,"mtime":1609358127303,"results":"32","hashOfConfig":"21"},{"size":2222,"mtime":1609364824048,"results":"33","hashOfConfig":"21"},{"size":2104,"mtime":1609448227669,"results":"34","hashOfConfig":"21"},{"size":451,"mtime":1609537817669,"results":"35","hashOfConfig":"21"},{"size":1204,"mtime":1609436104465,"results":"36","hashOfConfig":"21"},{"size":3215,"mtime":1609537758236,"results":"37","hashOfConfig":"21"},{"size":318,"mtime":1609447541043,"results":"38","hashOfConfig":"21"},{"size":1582,"mtime":1609542786527,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1lxvjqz",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jomarnguyen/Desktop/covid19-test/src/index.js",[],["81","82"],"/Users/jomarnguyen/Desktop/covid19-test/src/App.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/serviceWorker.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/app/store.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/CovidMap.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/features/countrySlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/Legend.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapContent.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/LoadCountriesTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableInfo.jsx",["83"],"import React, { useEffect, useState } from \"react\";\nimport \"./TableInfo.css\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport TableList from \"./TableList\";\nimport AppCharts from \"./AppCharts\";\n\nfunction TableInfo() {\n  const [listRegion, setListRegion] = useState([]);\n  const loadWorldData = new LoadCountriesTasks();\n\n  const load = () => {\n    loadWorldData.loadListRegion(setListRegion);\n  };\n\n  useEffect(load, []);\n\n  return (\n    <div className=\"app__table\">\n      <div className=\"app__listRegion\">\n        <h1>Region List</h1>\n        {listRegion && <TableList listRegion={listRegion} />}\n      </div>\n      <div className=\"app__charts\">\n        <AppCharts />\n      </div>\n    </div>\n  );\n}\n\nexport default TableInfo;\n","/Users/jomarnguyen/Desktop/covid19-test/src/CardType.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/TableList.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/MapHeader.jsx",["84"],"import React, { useEffect, useState } from \"react\";\nimport CardType from \"./CardType\";\nimport LoadCountriesTasks from \"./tasks/LoadCountriesTasks\";\nimport numeral from \"numeral\";\nimport \"./MapHeader.css\";\nimport { IconButton } from \"@material-ui/core\";\nimport { HistoryOutlined } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCountryCovid, setCountryLatLng } from \"./features/countrySlice\";\nimport { selectCasesType, setCasesType } from \"./features/casesTypeSlice\";\n\nfunction MapHeader() {\n  const [update, setUpdate] = useState();\n  const loadWorldData = new LoadCountriesTasks();\n  const countryDispatch = useDispatch();\n  const casesTypeDispatch = useDispatch();\n  const casesType = useSelector(selectCasesType);\n\n  const load = () => {\n    loadWorldData.loadWorldData(setUpdate);\n  };\n\n  useEffect(load, []);\n\n  const backClick = () => {\n    countryDispatch(setCountryCovid({ countryCovid: \"worldwide\" }));\n    countryDispatch(setCountryLatLng({ isGlobe: true }));\n  };\n\n  return (\n    <div className=\"mapheader\" style={{ height: \"25vh\" }}>\n      <h1>COVID-19 TRACKER</h1>\n      <div className=\"mapheader__cardsGroup\">\n        <CardType\n          active={casesType === \"cases\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"cases\"))}\n          title=\"Cases\"\n          cases={numeral(update?.todayCases).format(\"0.0a\")}\n          casesTotal={numeral(update?.cases).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"recovered\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"recovered\"))}\n          title=\"Recovered\"\n          cases={numeral(update?.todayRecovered).format(\"0.0a\")}\n          casesTotal={numeral(update?.recovered).format(\"0.0a\")}\n        />\n        <CardType\n          active={casesType === \"deaths\"}\n          onClick={() => casesTypeDispatch(setCasesType(\"deaths\"))}\n          title=\"Deaths\"\n          cases={numeral(update?.todayDeaths).format(\"0.0a\")}\n          casesTotal={numeral(update?.deaths).format(\"0.0a\")}\n        />\n      </div>\n      <IconButton className=\"globe__btn\" onClick={() => backClick()}>\n        <HistoryOutlined />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default MapHeader;\n","/Users/jomarnguyen/Desktop/covid19-test/src/AppCharts.jsx",[],"/Users/jomarnguyen/Desktop/covid19-test/src/features/casesTypeSlice.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/tasks/ChartDataTasks.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItems.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/legendsData/LegendItem.js",[],"/Users/jomarnguyen/Desktop/covid19-test/src/GeoMap.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":15,"column":19,"nodeType":"91","endLine":15,"endColumn":21,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":23,"column":19,"nodeType":"91","endLine":23,"endColumn":21,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadWorldData'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [loadWorldData]",{"range":"101","text":"102"},{"range":"103","text":"102"},[436,438],"[loadWorldData]",[857,859]]